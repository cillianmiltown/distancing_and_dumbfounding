---
title: "Sample and Simulated Data"
author: "Cillian McHugh"
date: "`r format(Sys.time(), '%d %B, %Y')`"
keywords          : "moral dumbfounding, dual-processes, reasons, intuitions"
bibliography: "resources/bib/My Library.bib"
figsintext        : yes
figurelist        : yes
tablelist         : yes
footnotelist      : no
lineno            : yes
lang              : "english"
class             : "man"
format:
  html:
    toc: true
    toc-depth: 4
    toc-location: left
editor_options: 
  chunk_output_type: console
---


```{r ch5setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(include = FALSE)
#options(scipen=1, digits=2)
# knitr::opts_chunk$set(fig.path='figure/graphics-', 
#                       cache.path='cache/graphics-', 
#                       fig.align='center',
#                       external=TRUE,
#                       echo=FALSE,
#                       warning=FALSE,
#                       fig.pos='H'
# )
```


```{r}
rm(list=ls())
library(conflicted)
library(tidyverse)
library(mlogit)
library(DescTools)
library(nnet)
library(pwr)
#library(reshape2)
#conflicts_prefer(dplyr::filter, .quiet = TRUE)

```


```{r}
N <- 4800
session_seed <- 4
save(N,file = "N.RData")

source("simulate_data.R")

x <- simulated_data_scenarios

```

```{r}

table(x$condition6)
table(x$psych,x$temp)

```



## Psychological Distancing and Dumbfounding


```{r}
#| include: false

x <- simulated_data_scenarios

x <- x[which(is.na(x$cs)==FALSE),]
table(x$temp)


y <- table(x$temp,x$cs)
y <- as.data.frame(y)
colnames(y) <- c("condition","CS","Freq")

z <- as.data.frame(table(x$temp,x$cs)/length(x$cs)*2)
perc <- z$Freq
test <- cbind(y,perc)
test$condition
test


#y <- table(df3$condition,df3$Dumb_incl_string)
#y <- as.data.frame(y)
colnames(y) <- c("condition","CS","Freq")


abc_graph <- function(){
  a <- x[which(x$temp==levels(as.factor(x$temp))[1]),]
  b <- x[which(x$temp==levels(as.factor(x$temp))[2]),]
  c <- x[which(x$temp==levels(as.factor(x$temp))[3]),]
  #levels(as.factor(df3$condition))[1]
  
  ay <- as.data.frame(table(a$cs,a$temp))
  by <- as.data.frame(table(b$cs,b$temp))
  cy <- as.data.frame(table(c$cs,c$temp))
  
  aperc <- ay$Freq/length(a$cs)
  ay <- cbind(ay,aperc)
  colnames(ay) <- c("CS","condition","Freq","perc")
  
  bperc <- by$Freq/length(b$cs)
  by <- cbind(by,bperc)
  colnames(by) <- c("CS","condition","Freq","perc")
  
  cperc <- cy$Freq/length(c$cs)
  cy <- cbind(cy,cperc)
  colnames(cy) <- c("CS","condition","Freq","perc")
  
  tot <- rbind(ay, by, cy)
  
  tot
}

test <- abc_graph()

x <- df3

se_fun <- function(a,b){
  k <- length(a$gender)
  n <- length(b$gender)
  
  pbar <- k/n
  a$pbar <- pbar
  a$se = sqrt(pbar * (1 - pbar)/n)
  a}
# https://www.r-tutor.com/elementary-statistics/interval-estimation/interval-estimate-population-proportion

y <- rbind(
  se_fun(x[which(x$condition=="1manip"&x$InCS=="It's wrong and I can provide a valid reason."),]
         ,x[which(x$condition=="1manip"),])
  ,se_fun(x[which(x$condition=="1manip"&x$InCS=="There is nothing wrong."),]
          ,x[which(x$condition=="1manip"),])
  ,se_fun(x[which(x$condition=="1manip"&x$InCS=="It's wrong but I can't think of a reason."),]
          ,x[which(x$condition=="1manip"),])
  ,se_fun(x[which(x$condition=="2control"&x$InCS=="It's wrong and I can provide a valid reason."),]
          ,x[which(x$condition=="2control"),])
  ,se_fun(x[which(x$condition=="2control"&x$InCS=="There is nothing wrong."),]
          ,x[which(x$condition=="2control"),])
  ,se_fun(x[which(x$condition=="2control"&x$InCS=="It's wrong but I can't think of a reason."),]
          ,x[which(x$condition=="2control"),])
)

y1 <- y %>% select("InCS","condition","pbar","se")
rownames(y1) <- NULL
test

y1 <- y1[!duplicated(y1),]
y1
test1 <- dplyr::left_join(test,y1, by = c("condition","InCS") )

rm(x,y)
```

```{r}
#| include: false


g <- ggplot(test1, aes(x=InCS, y=perc, fill=factor(condition
                                             ,labels=c("Distanced","Control")
                                             ))) +
  scale_y_continuous(limits = c(-.03,1),
                     labels = percent_format()
  )+ 
  geom_col(position = "dodge",
           color="black",
           size=.2
  )+
  geom_errorbar(aes(ymin=perc-se, ymax=perc+se), size=.2, width=.2,
               position=position_dodge(.9), color=#"black" #
                 "#5a5a5a"
                 )+
  geom_text(#family = "Times",
            size=3,
            aes( label = scales::percent(perc, accuracy = 1),
                 y= perc ),
            stat= "identity",
            vjust = -.5,
            hjust = +1.1,
            position = position_dodge(.9),
            fontface='plain'
            )+
  geom_text(#family = "Times", 
            size=4.2,
            aes(label = format(Freq),
                y= -3*(..count../100)/(..count..)),
            stat= "count",
            position = position_dodge(0.9),
            #vjust = -.05,
            fontface='plain'
            ) +
  xlab("Response to Critical Slide") +
  ylab("Percentage of participants selecting each response")+
  scale_x_discrete(labels=c("Nothing Wrong", "Dumbfounded","Reasons")) +
  scale_fill_grey(start = .5, end = .8) +
  labs(fill="Condition") +
  #theme_apa() +
  theme_bw() +
  theme(plot.title=element_text(#family="Times",
                                size=12
                                ),
        legend.text=element_text(#family="Times",
                                 size=8
                                 ),
          legend.title=element_text(#family="Times",
                                    size=10
                                    ),
          axis.text=element_text(#family="Times",
                                 colour = "black",
                                 size=8
                                 ),
          axis.ticks.x = element_blank(),
          axis.title=element_text(#family="Times",
                                  size=12
                                  ),
          strip.text=element_text(#family = "Times",
                                  size = 12
                                  ),
          strip.background = element_rect(fill = "white"),
          legend.position="right")
```

```{r}
#| label: apafg-dch5S2fig2criticalconditionNoExcl
#| include: true
#| fig-height: 5
#| apa-cap: "Pilot Study 2: Responses to critical slide for the experimental group (N = 47) and the control group (N = 46); (No exclusions; error bars represent standard error of the proportion)"

suppressWarnings(print(g))

```



```{r}
#| include: false
#| echo: false

df3 <- two_tot
t_j1 <- t.test(df3$InJu1 ~ df3$condition)
d_j1 <- cohensD(df3$InJu1 ~ df3$condition)
t_paragraph(df3$InJu1, df3$condition, "initial judgement")

t_j2 <- t.test(df3$InJu2 ~ df3$condition)
d_j2 <- cohensD(df3$InJu2 ~ df3$condition)
t_paragraph(df3$InJu2, df3$condition, "revised judgement")


t_paired_paragraph(df3$InJu1,df3$InJu2, "judgment")
t_j3 <- t.test(df3$InJu1,df3$InJu2,paired = TRUE)
d_j3 <- cohensD(df3$InJu1,df3$InJu2, method = "paired")



c <- chisq.test(table(df3$InCS,df3$condition))
w <- sqrt(c[]$statistic/length(df3$gender))
pw <- pwr.chisq.test(w=w,N=length(df3$InCS),df=(3-1),sig.level = .05)


```

### No Exclusions
#### Overview of Judgments (no exclusions)

`r numbers2words_cap1(sum(df3$InJu1<4,na.rm=T))` participants (`r round(((sum(df3$InJu1<4,na.rm=T)/length(df3$InJu1))*100), digits=2)`%) rated the behavior of Julie and Mark as wrong initially, and `r numbers2words_cap1(sum(df3$InJu2<4,na.rm=T))` participants (`r round(((sum(df3$InJu2<4,na.rm=T)/length(df3$InJu2))*100), digits=2)`%) rated the behavior as wrong at the end of the task. There was no significant difference between initial ratings (*M* = `r round(mean(df3$InJu1,na.rm=T), digits = 1)`, *SD* = `r round(sd(df3$InJu1,na.rm=T), digits = 1)`) and revised ratings (*M* = `r round(mean(df3$InJu2,na.rm=T), digits = 1)`, *SD* = `r round(sd(df3$InJu2,na.rm=T), digits = 1)`), *t*(`r t_j3$parameter`) = `r round(t_j3$statistic,digits=2)`, *p* `r paste(p_report(t_j3$p.value))`, *d* = `r round(d_j3, digits=2)`. 



```{r}
#| include: false
# 
# sum(df3$InCS!="There is nothing wrong."&df3$Ju1_bin!="wrong")
# 
# t_j1 <- t.test(df3$InJu1 ~ df3$condition)
# t_paragraph(df3$InJu1, df3$condition, "initial judgement")
#t_paragraph(one$InJu1, one$condition, "initial judgement")
#t_paragraph(two$InJu1, two$condition, "initial judgement")
#t_paragraph(three$InJu1, three$condition, "initial judgement")

#
table(df3$condition)
round(mean(df3$InJu1[which(df3$condition=="1manip")]), digits = 1)
round(sd(df3$InJu1[which(df3$condition=="1manip")]), digits = 1)

round(mean(df3$InJu1[which(df3$condition=="2control")]), digits = 1)
round(sd(df3$InJu1[which(df3$condition=="2control")]), digits = 1)
```

#### Distancing and Judgments Made

There was no difference in initial judgement depending on distance manipulation: *t*(`r round(t_j1$parameter,digits=2)`) = `r round(t_j1$statistic,digits=2)`, *p* `r paste(p_report(t_j1$p.value))`, *d* = `r round(d_j1, digits=2)`, 
(*M*~distanced~ = `r round(mean(df3$InJu1[which(df3$condition=="1manip")],na.rm=T), digits = 1)`,
*SD*~distanced~ = `r round(sd(df3$InJu1[which(df3$condition=="1manip")],na.rm=T), digits = 1)`,
*M*~control~ = `r round(mean(df3$InJu1[which(df3$condition=="2control")],na.rm=T), digits = 1)`, 
*SD*~control~ = `r round(sd(df3$InJu1[which(df3$condition=="2control")],na.rm=T), digits = 1)`). There was no difference in revised judgement depending on distance manipulation: *t*(`r round(t_j2$parameter,digits=2)`) = `r round(t_j2$statistic,digits=2)`, *p* `r paste(p_report(t_j2$p.value))`, *d* = `r round(d_j2, digits=2)`, 
(*M*~distanced~ = `r round(mean(df3$InJu2[which(df3$condition=="1manip")],na.rm=T), digits = 1)`,
*SD*~distanced~ = `r round(sd(df3$InJu2[which(df3$condition=="1manip")],na.rm=T), digits = 1)`,
*M*~control~ = `r round(mean(df3$InJu2[which(df3$condition=="2control")],na.rm=T), digits = 1)`, 
*SD*~control~ = `r round(sd(df3$InJu2[which(df3$condition=="2control")],na.rm=T), digits = 1)`).

#### Distancing and Reason-Giving/Dumbfounding

There was no significant association between experimental condition and response to the critical slide, $\chi$^2^(`r c$parameter`, *N* = `r length(df3$InJu1)`) = `r round(c$statistic, digits=3)`, *p* `r paste(p_report(c$p.value))`, *V* = `r round(w,digits=2)`, the observed power was `r round(pw$power,digits=2)`. The responses to the critical slide for the experimental group (*N* = `r sum(df3$condition=="1manip")`) and the control group (*N* = `r sum(df3$condition=="2control")`) are displayed in {apafg-dch5S2fig2criticalconditionNoExcl}.


## Temporal Distancing and Dumbfounding



```{r}
#| include: false


```


### Distancing and Dumbfounding




```{r}
#| include: false

multinom_PseudoR2s <- function(model0R2,model1R2) {
  dev <- abs(model1R2$deviance)
  nullDev <- abs(model0R2$deviance)
  modelN <- length(model1R2$fitted.values)
  R.l <- 1 - dev / nullDev
  R.cs <- 1- exp ( -(nullDev - dev) / modelN)
  R.n <- R.cs / ( 1 - ( exp (-(nullDev / modelN))))
  
  all <- list(hosmer_and_lemeshow = as.numeric(R.l)
              , mcfadden = NA
              , cox_and_snell = as.numeric(R.cs)
              , nagelkerke = as.numeric(R.n))
  all
}

wald_OR <- function(term){
  term$wald <- (term$statistic)*2
  term$OR <- exp(term$estimate)
  term$lower <- term$`2.5 %`
  term$upper <- term$`97.5 %`
  term
}

```


```{r}
#| include: false

model0 <- nnet::multinom(cs~1,x) 
model1 <- nnet::multinom(cs~psych+temp+psych*temp,x) 

summary_model1 <- broom::tidy(model1)

summary_model1$p.value

chi_full <- anova(model0,model1)
chi1 <- anova(model0,model1)[2,]

chi_full$`Resid. Dev`[2]
chi_full$`Resid. Dev`[1]

chi_df <- chi1$`   Df`
chi_p <- chi1$`Pr(Chi)`


c <- chi1$`LR stat.`
w <- sqrt(c/length(x$cs))
pw <- pwr.chisq.test(w=w,N=length(x$cs),df=(chi_df),sig.level = .05)


cox <- multinom_PseudoR2s(model0,model1)
cox

c

a <- exp(confint(model1))


psych_self_dumb <- summary_model1[2,]
psych_self_dumb <- cbind.data.frame(psych_self_dumb, as.data.frame(a[,,1])[2,])
psych_self_dumb <- wald_OR(psych_self_dumb)

temp_fututre_dumb <- summary_model1[3,]
temp_fututre_dumb <- cbind.data.frame(temp_fututre_dumb, as.data.frame(a[,,1])[3,])
temp_fututre_dumb <- wald_OR(temp_fututre_dumb)


```




Overall the model significantly predicted responses to the critical slide
$\chi$^2^(`r chi_df`,
*N* = `r length(x$cs)`) =
`r round(c, digits=2)`,
*p* `r paste(p_report(chi_p))`, The observed power was
`r round(pw$power,digits=2)`.
 The model explained between
`r round(cox$cox_and_snell*100, digits=2)`% (Cox and Snell R square) and
`r round(cox$nagelkerke*100, digits=2)`% (Nadelkerke R squared) of the variance in responses to the critical slide. 
For scenarios in the future, participants were more likely to provide reasons than to present as dumbfounded
Wald = `r round(temp_fututre_dumb$wald,digits=2)`,
*p* `r paste(p_report(temp_fututre_dumb$p.value))`, odds ratio = `r round(temp_fututre_dumb$OR,digits=2)`, 95% CI
[`r round(temp_fututre_dumb$lower,digits=2)`,
`r round(temp_fututre_dumb$upper,digits=2)`].












